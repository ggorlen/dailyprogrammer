# 359e: https://www.reddit.com/r/dailyprogrammer/comments/8g0iil/20180430_challenge_359_easy_regular_paperfold/

def paperfold n
  w = "1"
  len = 1

  n.times do
    b = w.to_i(2)
    b ^= (1 << b.bit_length) - 1
    w += "1" + ("%0*b" % [len, b]).reverse
    len = len * 2 + 1
  end

  w
end

exp

p paperfold(8) == exp
